service: wrappers-http-gateway
provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  memorySize: 128
  timeout: 3
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ packagesTable, Arn ]
  environment:
    PACKAGES_TABLE: ${self:custom.packagesTable}
    WRAPPERS_GATEWAY_ADMIN_KEY: ${self:custom.wrappersGatewayAdminKey.wrappers_gateway_admin_key}
    ACCOUNT_SERVICE_URI: https://accounts.wrappers.dev

package: 
  individually: true

custom:
  serverless-offline:
    reloadHandler: true
  rust:
    dockerless: true
  customDomain:
    domainName: http.wrappers.dev
    stage: ${self:provider.stage}
    certificateName: wrappers.dev
    createRoute53Record: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8001
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
  packagesTable: 'packages-table-${sls:stage}'
  wrappersGatewayAdminKey: ${ssm:/aws/reference/secretsmanager/wrappers-gateway-admin-key}

plugins:
  - serverless-domain-manager
  - serverless-dynamodb-local
  - serverless-offline

functions:
  publish:
    handler: ./typescript/service/build/index.server.publish
    runtime: nodejs16.x
    memorySize: 256
    timeout: 10
    package:
      exclude:
        - ./**
      include:
        - ./typescript/service/build/**
        - ./typescript/service/node_modules/**
    events:
      - http:
          path: u/{user}/{packageAndVersion}
          method: post
          cors: true
  packageInfo:
    handler: ./typescript/service/build/index.server.packageInfo
    runtime: nodejs16.x
    memorySize: 256
    timeout: 10
    package:
      exclude:
        - ./**
      include:
        - ./typescript/service/build/**
        - ./typescript/service/node_modules/**
    events:
      - http:
          path: v/{user}/{package}
          method: get
          cors: true
  resolve:
    handler: ./typescript/service/build/index.server.resolve
    runtime: nodejs16.x
    memorySize: 256
    timeout: 10
    package:
      exclude:
        - ./**
      include:
        - ./typescript/service/build/**
        - ./typescript/service/node_modules/**
    events:
      - http:
          path: u/{user}/{packageAndVersion}/{filePath}
          method: get
          cors: true
resources:
  Resources:
    packagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.packagesTable}